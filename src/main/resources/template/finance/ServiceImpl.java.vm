package ${package}.${moduleName}.service.impl;

import org.springframework.stereotype.Service;
import java.util.Date;
import java.util.List;
import java.util.Map;
import cn.hutool.core.bean.BeanUtil;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import lombok.AllArgsConstructor;
import org.springframework.transaction.annotation.Transactional;
import ${package}.${moduleName}.mapper.${className}Mapper;
import ${package}.${moduleName}.service.${className}Service;

@AllArgsConstructor
@Service
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service {


    @Override
    public PageInfo<${className}> getPage(${className} ${classname}){
        PageHelper.startPage(${classname}.getPageNum(), ${classname}.getPageSize());
        List<${className}> list = baseMapper.getPage(${classname});
        PageInfo<${className}> pageInfo = new PageInfo<>(list);
        return pageInfo;
    }

    @Override
    @Transactional
    public Boolean saveOrUpdateModel(${className} ${classname}){
        Long id = ${classname}.getId();
        if (id!=null){
            ${classname}.setUpdateTime(new Date());
            return this.updateById(${classname});
        } else {
            Long newId = baseMapper.getNextId();
            ${classname}.setId(newId);
            ${classname}.setCreateTime(new Date());
            return this.save(${classname});
        }
    }

    @Override
    public Boolean hiddenByIds(String ids){
        List<Long> idList = Arrays.asList(ids.split(",")).stream().map(it -> Long.parseLong(it)).collect(Collectors.toList());
        int result = baseMapper.batchHidden(idList);
        return result>0?true:false;
    }
}