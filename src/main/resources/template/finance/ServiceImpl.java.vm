package ${package}.${moduleName}.service.impl;

import cn.com.gxetc.micro.devtools.conston.Constants;
import cn.com.gxetc.micro.devtools.util.ListUtil;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;
import java.util.Map;
import cn.hutool.core.bean.BeanUtil;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import lombok.AllArgsConstructor;
import javax.transaction.Transactional;

import ${package}.${moduleName}.mapper.${className}Mapper;
import ${package}.${moduleName}.model.${className};
import ${package}.${moduleName}.model.dto.Query${className}Dto;
import ${package}.${moduleName}.service.${className}Service;

@AllArgsConstructor
@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service {


    @Override
    public PageInfo<${className}> getPage(${className} ${classname}){
        PageHelper.startPage(dto.getPageNum(), dto.getPageSize());
        List<${className}> list = baseMapper.getPage(${classname});
        PageInfo<${className}> pageInfo = new PageInfo<>(list);
        return pageInfo;
    }

    @Override
    @Transactional
    public boolean saveOrUpdate(${className} ${classname}){
        Long newId = baseMapper.getNextId();
        Long id = ${classname}.getId();
        if (id!=null){
            ${classname}.setUpdateTime(new Date());
            return this.updateById(${classname});
        } else {
            ${classname}.setCreateTime(new Date());
            return this.save(${classname});
        }
    }

    @Override
    public Boolean hiddenByIds(String ids){
        List<Long> idList = ListUtil.toLongList(ids,",");
        int result = baseMapper.batchDelete(idList;
        return result>0?true:false;
    }
}